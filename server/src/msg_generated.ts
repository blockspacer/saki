// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @enum
 */
export enum Any{
  NONE= 0,
  Query= 1
};

/**
 * @enum
 */
export enum AuthType{
  unauthenticated= 0,
  login= 1,
  signup= 2,
  token= 3
};

/**
 * @constructor
 */
export class Query {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  bb: flatbuffers.ByteBuffer|null = null;

  /**
   * @type {number}
   */
  bb_pos:number = 0;
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Query}
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Query {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Query=} obj
 * @returns {Query}
 */
static getRootAsQuery(bb:flatbuffers.ByteBuffer, obj?:Query):Query {
  return (obj || new Query).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
collection():string|null
collection(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
collection(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
static startQuery(builder:flatbuffers.Builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} collectionOffset
 */
static addCollection(builder:flatbuffers.Builder, collectionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, collectionOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
static endQuery(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
/**
 * @constructor
 */
export class Base {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  bb: flatbuffers.ByteBuffer|null = null;

  /**
   * @type {number}
   */
  bb_pos:number = 0;
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Base}
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Base {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Base=} obj
 * @returns {Base}
 */
static getRootAsBase(bb:flatbuffers.ByteBuffer, obj?:Base):Base {
  return (obj || new Base).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {Any}
 */
msgType():Any {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? /** @type {Any} */ (this.bb!.readUint8(this.bb_pos + offset)) : Any.NONE;
};

/**
 * @param {flatbuffers.Table} obj
 * @returns {?flatbuffers.Table}
 */
msg<T extends flatbuffers.Table>(obj:T):T|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
user():string|null
user(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
user(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {AuthType}
 */
authType():AuthType {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? /** @type {AuthType} */ (this.bb!.readInt8(this.bb_pos + offset)) : AuthType.unauthenticated;
};

/**
 * @returns {number}
 */
requestId():number {
  var offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
authUser():string|null
authUser(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
authUser(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
password():string|null
password(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
password(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
static startBase(builder:flatbuffers.Builder) {
  builder.startObject(7);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Any} msgType
 */
static addMsgType(builder:flatbuffers.Builder, msgType:Any) {
  builder.addFieldInt8(0, msgType, Any.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} msgOffset
 */
static addMsg(builder:flatbuffers.Builder, msgOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, msgOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} userOffset
 */
static addUser(builder:flatbuffers.Builder, userOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, userOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {AuthType} authType
 */
static addAuthType(builder:flatbuffers.Builder, authType:AuthType) {
  builder.addFieldInt8(3, authType, AuthType.unauthenticated);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} requestId
 */
static addRequestId(builder:flatbuffers.Builder, requestId:number) {
  builder.addFieldInt32(4, requestId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} authUserOffset
 */
static addAuthUser(builder:flatbuffers.Builder, authUserOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, authUserOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} passwordOffset
 */
static addPassword(builder:flatbuffers.Builder, passwordOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, passwordOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
static endBase(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
static finishBaseBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset);
};

}
